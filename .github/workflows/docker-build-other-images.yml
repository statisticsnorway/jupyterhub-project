name: Docker Build Other Images

on:
  release:
    types: [published]
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    branches:
      - "main"
    paths:
      - 'docker/jupyterhub/**'
      - 'docker/spark-r/**'
      - 'docker/spark-py/**'
      - '.github/workflows/docker-build-other-images.yml'
  pull_request:
    paths:
      - 'docker/jupyterhub/**'
      - 'docker/spark-r/**'
      - 'docker/spark-py/**'
      - '.github/workflows/docker-build-other-images.yml'

env:
  REGISTRY: europe-north1-docker.pkg.dev/artifact-registry-5n/dapla-stat-docker/jupyter
  TAG: ${{ github.ref_name }}-${{ github.sha }}

jobs:
  changes:
    name: "Discover which images to build"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    outputs:
      # If the triggering event is a release, build all images, otherwise only build those with changes
      images: ${{ github.event_name == 'release' && '["jupyterhub", "spark-r", "spark-py"]' || steps.filter.outputs.changes }}
    steps:
    - name: "Check out repo"
      uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      if: github.event_name != 'release'
      with:
        filters: |
          jupyterhub:
            - 'docker/jupyterhub/**'
            - '.github/workflows/docker-build-other-images.yml'
          spark-r:
            - 'docker/spark-r/**'
            - '.github/workflows/docker-build-other-images.yml'
          spark-py:
            - 'docker/spark-py/**'
            - '.github/workflows/docker-build-other-images.yml'

  docker:
    needs: changes
    strategy:
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files
        # e.g. ['jupyterhub', 'spark-r'] if both package folders contain changes
        image: ${{ fromJSON(needs.changes.outputs.images) }}
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      - name: "Check out repo"
        uses: actions/checkout@v3
      - name: "Authenticate to Google Cloud"
        id: "auth"
        uses: "google-github-actions/auth@v1.1.1"
        with:
          workload_identity_provider: "projects/848539402404/locations/global/workloadIdentityPools/gh-actions/providers/gh-actions"
          service_account: "gh-actions-dapla-stat@artifact-registry-5n.iam.gserviceaccount.com"
          token_format: "access_token"
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
      - name: Docker meta
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/dapla-${{ matrix.image }}
          # Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=raw,value=${{ env.TAG }}, enable=true
      - name: Build and push image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: docker/${{ matrix.image }}
          file: docker/${{ matrix.image }}/Dockerfile
          push: true
          tags: |
            ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/dapla-${{ matrix.image }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/dapla-${{ matrix.image }}:buildcache,mode=max
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
