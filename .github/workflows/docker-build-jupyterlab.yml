name: Docker Build Jupyterlab

on:
  release:
    types: [published]
  push:
    branches:
      - "main"
    paths:
      - 'docker/jupyterlab/**'
      - 'build/**'
      - '.github/workflows/docker-build-jupyterlab.yml'
  pull_request:
    paths:
      - 'docker/jupyterlab/**'
      - 'build/**'
      - '.github/workflows/docker-build-jupyterlab.yml'

env:
  REGISTRY: europe-north1-docker.pkg.dev/artifact-registry-5n/dapla-stat-docker/jupyter
  IMAGE: jupyterlab-dapla
  BASE_IMAGE: jupyterlab-common:latest
  TAG: ${{ github.ref_name }}-${{ github.sha }}

jobs:
  docker:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      - name: "Authenticate to Google Cloud"
        uses: actions/checkout@v3
      - id: "auth"
        uses: "google-github-actions/auth@v1.1.1"
        with:
          workload_identity_provider: "projects/848539402404/locations/global/workloadIdentityPools/gh-actions/providers/gh-actions"
          service_account: "gh-actions-dapla-stat@artifact-registry-5n.iam.gserviceaccount.com"
          token_format: "access_token"
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build Maven Project
        run: mvn clean package -DskipTests=true -Dmaven.javadoc.skip=true -U -P ssb-bip --batch-mode -Djdk.tls.client.protocols="TLSv1.2"
        working-directory: build
      - name: Copy Artifact
        run:  |
          cp target/*.jar $GITHUB_WORKSPACE/docker/jupyterlab
          rm -Rf target
        working-directory: build

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
      - name: Docker meta
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          # Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{branch}}-{{sha}}-{{date 'YYYYMMDDHHmmss'}},enable={{is_default_branch}}
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=raw,value=${{ env.TAG }}, enable=true
      - name: Free up disk space
        run: |
          sudo rm -rf \
          /usr/share/dotnet \
          /opt/ghc \
          /usr/local/.ghcup
          docker image prune -af
      - name: Report disk space usage
        run: |
          df -h .
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: docker/jupyterlab/
          file: docker/jupyterlab/Dockerfile
          build-args: base_image=${{ env.REGISTRY }}/${{ env.BASE_IMAGE }}
          push: true
          tags: |
            ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE }}:buildcache,mode=max
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
